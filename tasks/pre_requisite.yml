---
- name: netdata | Set facts about netdata role
  ansible.builtin.set_fact:
    netdata_package_state: "{{ hostvars[inventory_hostname]['netdata'] |
      community.general.json_query('[].package_state | [0]') }}"
    netdata_settings: "{{ hostvars[inventory_hostname]['netdata'] |
      community.general.json_query('[].settings[]') }}"
    netdata_plugins_settings: "{{ hostvars[inventory_hostname]['netdata'] |
      community.general.json_query('[].settings[].plugins_settings[]') }}"
    netdata_plugins_settings_python: "{{
      hostvars[inventory_hostname]['netdata'] |
      community.general.json_query('[].settings[].plugins_settings[].python[] |
      [0]') }}"
- name: netdata | Assert that netdata package state in valid value
  ansible.builtin.assert:
    that:
    - "vars['netdata_package_state'] in ['present', 'latest']"
    msg: "'package_state' must be in 'present' or 'latest'."
    quiet: "true"
  when:
  - "hostvars[inventory_hostname]['netdata_package_state'] is defined"
- name: netdata | Add the OS specific varibles
  include_vars: "{{ hostvars[inventory_hostname]['ansible_os_family'] +
                    '.yml' }}"
- name: netdata | Create catalogs
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['netdata_dest'] }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  when:
  - "vars['netdata_settings'] is defined"
  - "vars['netdata_settings'] != ''"
